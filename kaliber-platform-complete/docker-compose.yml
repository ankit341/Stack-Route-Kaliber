version: '3'

services:
  kaliber-naming-server:
    image: kaliber-naming-server
    build: kaliber-naming-server
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/namingserver-properties.env
    ports:
      - 8761:8761
    expose:
      - 8761
    depends_on:
      - kaliber-config-server

  kaliber-api-gateway:
    image: kaliber-api-gateway
    build: kaliber-api-gateway
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/apigateway-properties.env
    ports:
      - 8080:8080
    expose:
      - 8080
    depends_on:
      - kaliber-config-server

  kaliber-config-server:
    image: kaliber-config-server
    build: kaliber-config-server
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/configserver-properties.env
    ports:
      - 8888:8888
    expose:
      - 8888

  kaliber-quiz-inventory:
    image: kaliber-quiz-inventory
    build: kaliber-quiz-inventory
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/kaliber-quizinventory-properties.env
    ports:
      - 8060:8060
    expose:
      - 8888
    depends_on:
      - kaliber-config-server
    #  - mongo

  kaliber-quiz-play:
    image: kaliber-quiz-play
    build: kaliber-quiz-play
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/kaliber-quizplay-properties.env
    ports:
      - 8070:8070
    expose:
      - 8888
    depends_on:
      - kaliber-config-server

  kaliber-leaderboard:
    image: kaliber-leaderboard
    build: kaliber-leaderboard
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/kaliber-leaderboard-properties.env
    ports:
      - 8040:8040
    expose:
      - 8888
    depends_on:
      - kaliber-config-server

  kaliber-question-inventory:
    image: kaliber-question-inventory
    build: kaliber-question-inventory
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/kaliber-questioninventory-properties.env
    deploy:
      replicas: 3
    ports:
      - 8091:8091
    expose:
      - 8091
    depends_on:
      - kaliber-config-server
#      - mongo

  kaliber-user-management:
    image: kaliber-user-management
    build: kaliber-user-management
    restart: always
    volumes:
      - ../../mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/kaliber-usermanagement-properties.env
    ports:
      - 8095:8095
    expose:
      - 8888
    depends_on:
      - kaliber-config-server

  kaliber-webapplication:
    image: kaliber-webapplication
    build: kaliber-webapplication
    restart: always
    volumes:
      - ../../mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
     - ./docker_env/production/kaliber-webapplication-properties.env
    ports:
      - 8765:8765
    expose:
      - 8888
    depends_on:
      - kaliber-config-server

  kaliber-semanticservice:
    image: kaliber-semanticservice
    build: kaliber-semanticservice
    restart: always
    volumes:
      - $HOME/mavenrepo/:/maven/home/
    environment:
      MVN_LOCAL_REPO: /maven/home/
    env_file:
      - ./docker_env/production/kaliber-semanticservice-properties.env
    ports:
      - 8050:8050
    expose:
      - 8888

  # mongo:
  #   image: mongo
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   volumes: 
  #     - $HOME/Documents/kaliberDb:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
